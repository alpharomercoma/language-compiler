// Helper function to check if a is divisible by b
function isDivisible(a, b) {
  let quotient = a / b;
  if ((quotient * b) == a) {
    return 1;
  } else {
    return 0;
  }
}

// Function to check if a number is prime using isDivisible
function isPrime(n) {
  if (n <= 1) {
    return 0;
  }
  if (n <= 3) {
    return 1;
  }
  if (isDivisible(n, 2) == 1) {
    return 0;
  }
  if (isDivisible(n, 3) == 1) {
    return 0;
  }
  let i = 5;
  while (i * i <= n) {
    if (isDivisible(n, i) == 1) {
      return 0;
    }
    if (isDivisible(n, i + 2) == 1) {
      return 0;
    }
    i = i + 6;
  }
  return 1;
}
// Helper function to check if a is divisible by b
function isDivisible(a, b) {
  let quotient = a / b;
  if ((quotient * b) == a) {
    return 1;
  } else {
    return 0;
  }
}

// Function to check if a number is prime using isDivisible
function isPrime(n) {
  if (n <= 1) {
    return 0;
  }
  if (n <= 3) {
    return 1;
  }
  if (isDivisible(n, 2) == 1) {
    return 0;
  }
  if (isDivisible(n, 3) == 1) {
    return 0;
  }
  let i = 5;
  while (i * i <= n) {
    if (isDivisible(n, i) == 1) {
      return 0;
    }
    if (isDivisible(n, i + 2) == 1) {
      return 0;
    }
    i = i + 6;
  }
  return 1;
}

// Simpler approach - check using isDivisible for all factors
function isPrimeSimple(n) {
  if (n <= 1) {
    return 0;
  }
  if (n == 2) {
    return 1;
  }
  if (n == 3) {
    return 1;
  }
  if (isDivisible(n, 2) == 1) {
    return 0;
  }
  let i = 3;
  while (i * i <= n) {
    if (isDivisible(n, i) == 1) {
      return 0;
    }
    i = i + 2;
  }
  return 1;
}

// Function to find all prime numbers up to n using isPrimeSimple
function findPrimes(n) {
  let primes = 0;
  for (let i = 2; i <= n; i = i + 1) {
    if (isPrimeSimple(i) == 1) {
      print i;
      primes = primes + 1;
    }
  }
  return primes;
}

// Find primes up to 30
let count = findPrimes(30);
print "Found";
print count;
print "prime numbers";